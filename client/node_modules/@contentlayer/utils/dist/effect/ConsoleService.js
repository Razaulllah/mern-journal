import * as T from '@effect-ts/core/Effect';
import * as L from '@effect-ts/core/Effect/Layer';
import { tag } from '@effect-ts/core/Has';
export const makeLiveConsole = T.succeedWith(() => ({
    log: (...msg) => T.succeedWith(() => {
        console.log(...msg);
    }),
}));
export const ConsoleService = tag();
export const LiveConsole = L.fromEffect(ConsoleService)(makeLiveConsole);
export const provideConsole = T.provideSomeLayer(LiveConsole);
export const { log } = T.deriveLifted(ConsoleService)(['log'], [], []);
export const provideTestConsole = (messages) => T.provideServiceM(ConsoleService)(T.succeedWith(() => ({
    log: (message) => T.succeedWith(() => {
        messages.push(message);
    }),
})));
//# sourceMappingURL=ConsoleService.js.map