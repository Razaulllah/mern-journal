import * as path from 'node:path';
import { fileURLToPath } from 'node:url';
import { pipe, T } from '../effect/index.js';
import { fs } from '../fs.js';
// TODO do this at compile time as this takes 10ms every time
// use static import once JSON modules are no longer experimental
// import utilsPkg from '@contentlayer/utils/package.json'
const __dirname = path.dirname(fileURLToPath(import.meta.url));
export const getContentlayerVersion = () => {
    // Go two levels up for "dist/node/version.js"
    const packageJsonFilePath = path.join(__dirname, '..', '..', 'package.json');
    return pipe(fs.readFileJson(packageJsonFilePath), T.map((pkg) => pkg.version), T.catchTag('fs.FileNotFoundError', (e) => T.die(e)));
};
//# sourceMappingURL=version.js.map